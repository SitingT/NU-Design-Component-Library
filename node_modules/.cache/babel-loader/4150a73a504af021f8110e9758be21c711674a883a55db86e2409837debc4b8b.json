{"ast":null,"code":"var _jsxFileName = \"/Users/sitingtang/Desktop/louise-components/src/components/Button/button.tsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = props => {\n  const {\n    btnType,\n    disabled,\n    size,\n    children,\n    href\n  } = props;\n  const classes = classNames(\"btn\", {\n    [`btn -${btnType}`]: ButtonType,\n    [`btn -${size}`]: ButtonSize,\n    disabled: btnType === \"link\" && disabled\n  });\n  if (btnType === ButtonType.Link && href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classes,\n      href: href,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes,\n      disabled: disabled,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = Button;\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default\n};\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","classNames","jsxDEV","_jsxDEV","Button","props","btnType","disabled","size","children","href","classes","ButtonType","ButtonSize","Link","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","Default","$RefreshReg$"],"sources":["/Users/sitingtang/Desktop/louise-components/src/components/Button/button.tsx"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { BooleanLiteral } from \"typescript\";\n\nexport type ButtonSize = \"lg\" | \"sm\";\nexport type ButtonType = \"primary\" | \"default\" | \"danger\" | \"link\";\n\ninterface BaseButtonProps {\n  className?: string;\n  disabled?: boolean;\n  size?: ButtonSize;\n  btnType?: ButtonType;\n  children: React.ReactNode;\n  href?: string;\n}\n\nconst Button: React.FC<BaseButtonProps> = (props) => {\n  const { btnType, disabled, size, children, href } = props;\n\n  const classes = classNames(\"btn\", {\n    [`btn -${btnType}`]: ButtonType,\n    [`btn -${size}`]: ButtonSize,\n    disabled: btnType === \"link\" && disabled,\n  });\n  if (btnType === ButtonType.Link && href) {\n    return (\n      <a className={classes} href={href}>\n        {children}\n      </a>\n    );\n  } else {\n    return (\n      <button className={classes} disabled={disabled}>\n        {children}\n      </button>\n    );\n  }\n};\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default,\n};\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAepC,MAAMC,MAAiC,GAAIC,KAAK,IAAK;EACnD,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGL,KAAK;EAEzD,MAAMM,OAAO,GAAGV,UAAU,CAAC,KAAK,EAAE;IAChC,CAAE,QAAOK,OAAQ,EAAC,GAAGM,UAAU;IAC/B,CAAE,QAAOJ,IAAK,EAAC,GAAGK,UAAU;IAC5BN,QAAQ,EAAED,OAAO,KAAK,MAAM,IAAIC;EAClC,CAAC,CAAC;EACF,IAAID,OAAO,KAAKM,UAAU,CAACE,IAAI,IAAIJ,IAAI,EAAE;IACvC,oBACEP,OAAA;MAAGY,SAAS,EAAEJ,OAAQ;MAACD,IAAI,EAAEA,IAAK;MAAAD,QAAA,EAC/BA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAER,CAAC,MAAM;IACL,oBACEhB,OAAA;MAAQY,SAAS,EAAEJ,OAAQ;MAACJ,QAAQ,EAAEA,QAAS;MAAAE,QAAA,EAC5CA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAEb;AACF,CAAC;AAACC,EAAA,GArBIhB,MAAiC;AAuBvCA,MAAM,CAACiB,YAAY,GAAG;EACpBd,QAAQ,EAAE,KAAK;EACfD,OAAO,EAAEM,UAAU,CAACU;AACtB,CAAC;AAED,eAAelB,MAAM;AAAC,IAAAgB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}